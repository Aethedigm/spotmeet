{{extends "./layouts/base.jet"}}

{{block browserTitle()}}Settings{{end}}

{{block css()}}
<style>

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');
/*@import 'https://fonts.googleapis.com/css?family=Rubik+One'; */

.inputGroup {
    background-color: #D1D7DC;
    display: block;
    margin: 10px 0;
    position: relative;
    box-shadow: 2px 2px 2px 1px rgba(147, 147, 147, 0.71);
}

.inputGroup label {
    padding: 12px 30px;
    width: 100%;
    display: block;
    text-align: left;
    color: #3C454C;
    cursor: pointer;
    position: relative;
    z-index: 2;
    transition: color 200ms ease-in;
    overflow: hidden;
    margin-bottom: 15px;
}

.inputGroup label:before {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    content: "";
    background-color: #1DB954;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) scale3d(1, 1, 1);
    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    z-index: -1;
}

.inputGroup label:after {
    width: 32px;
    height: 32px;
    content: "";
    border: 2px solid #D1D7DC;
    background-color: #fff;
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
    background-repeat: no-repeat;
    background-position: 2px 3px;
    border-radius: 50%;
    z-index: 2;
    position: absolute;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    transition: all 200ms ease-in;
}

.inputGroup input:checked ~ label {
    color: #fff;
}

.inputGroup input:checked ~ label:before {
    transform: translate(-50%, -50%) scale3d(56, 56, 1);
    opacity: 1;
}

.inputGroup input:checked ~ label:after {
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23000' fill-rule='nonzero'/%3E%3C/svg%3E ");
    background-repeat: no-repeat;
    background-color: #fff;
    border-color: #fff;
}

.inputGroup input {
    width: 32px;
    height: 32px;
    order: 1;
    z-index: 2;
    position: absolute;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    visibility: hidden;
}

.shadowsRoundEdges{
box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
border-radius: 3vw;
}

.form {
    padding: 0 16px;
    max-width: 550px;
    margin: 50px auto;
    font-size: 18px;
    font-weight: 600;
    line-height: 36px;
}

body {
    background-color: #fff;
    font-family: "Fira Sans", sans-serif;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
}

#matchSettingsContainer {
  position: relative;
  margin: 20px 0 75px 0;
}

#rangeValue {
  position: relative;
  display: block;
  text-align: center;
  font-family: "Fira Sans", sans-serif;
  font-size: 2em;
  color: #000;
  font-weight: 200;
}

.range {
  width: 100%;
  height: 30px;
  -webkit-appearance: none;
  background: #111;
  outline: none;
  border-radius: 15px;
  overflow: hidden;
 /*box-shadow: inset 0 0 5px rgba(0, 0, 0, 1); */
  box-shadow: 2px 2px 2px 1px rgba(147, 147, 147, 0.71);
}

.range::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: #1DB954;
  cursor: pointer;
  border: 2px solid #333;
  box-shadow: -407px 0 0 400px #b0f790;
}

/* Save Btn */
@import 'https://fonts.googleapis.com/css?family=Rubik+One';

.save-button::after, .save-button::before {
  position: absolute;
  content: "";
  transition: all 0.2s;
}

.save-button {
  display: inline-block;
  padding: 20px 40px;
  color: white;
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  vertical-align: middle;
  font-family: "Rubik One", sans-serif;
  text-decoration: none;
  font-size: 4vw;
  transition: all 0.2s;
  background-color: #1DB954;
}

.save-button:active, .save-button:focus {
    color: white;
}

.save-button::before {
  bottom: -7px;
  height: 7px;
  width: 100%;
  left: 4px;
  transform: skewX(45deg);
  background-color: #328419;
}

.save-button::after {
  right: -7px;
  height: 100%;
  width: 7px;
  bottom: -4px;
  transform: skewY(45deg);
  background-color: #1e4c10;
}

.save-button:active {
  margin-left: 4px;
  margin-top: 4px;
}

.save-button:active::before {
  bottom: -5px;
  height: 5px;
  left: 3px;
}

.save-button:active::after {
  right: -5px;
  width: 5px;
  bottom: -3px;
}
</style>
{{end}}

{{block pageContent()}}
    <div id="topbar"
        class="navbar fixed-top bg-light">
            <div class="btn" onclick="location.href = '/'">
                <h3 class="font-weight-bold">&nbsp;&nbsp;sp<span class="green-font">o</span>tmeet</h3>
            </div>
            <div class="btn float-right">
                <a 
                    href="/users/profile" 
                    style="text-align:right; font-family: 'Fredoka', sans-serif;"
                    class="btn float-right"
                >
                    <i class="fa-solid fa-user nav-icons"></i>
                </a>
                <a 
                    href="/users/logout" 
                    style="text-align:right; font-family: 'Fredoka', sans-serif;"
                    class="btn float-right"
                    id="btnLogout"
                >
                    <i class="fa-solid fa-right-from-bracket nav-icons"></i>
                </a>
            </div>
    </div>

<div style="margin-top:5em; margin-bottom:3.6em;" class="justify-content-center">

    <div class="text-center mb-3"><span style="font-size:1.5em; color:#1DB954;">Settings</span></div>

    <div style="text-align:left"><label for="looking-for" class="form-label">Looking for...</label></div>
    <div class="inputGroup shadowsRoundEdges">
        <input id="btn-friends" name="btnradio" type="radio" value="friends"/>
        <label for="btn-friends">Friends</label>
    </div>
    <div class="inputGroup shadowsRoundEdges">
        <input id="btn-dating" name="btnradio" type="radio" value="dating"/>
        <label for="btn-dating">Dating</label>
    </div>distance
    <div class="inputGroup shadowsRoundEdges">
        <input id="btn-workout-partner" name="btnradio" type="radio" value="workout"/>
        <label for="btn-workout-partner">Exersice Buddy</label>
    </div>
    <div class="inputGroup shadowsRoundEdges">
        <input id="btn-musicians" name="btnradio" type="radio" value="music"/>
        <label for="btn-musicians">Fellow Mucisians</label>
    </div>
    <div class="inputGroup shadowsRoundEdges">
        <input id="btn-concert-goers" name="btnradio" type="radio" value="concert"/>
        <label for="btn-concert-goers">Concert Goers</label>
    </div>

    <div id="matchSettingsContainer" class="matchSettingsContainer">
        <span id="sensitivityValue">{{ matchSensitivityString }} Match Sensitivity</span>
        <input class="range" type="range" id="matchSensitivity" step="1" value="{{ matchSensitivity }}" min="1" max="3" onmousemove="matchSlide(this.value)">

        <span id="rangeValue">{{ distance }} miles</span>
        <input class="range" type="range" id="matchRange" step="5" value="{{ distance }}" min="25" max="100" onmousemove="rangeSlide(this.value)">
    </div>

    <a href="#" class="save-button" onclick="setUserSettings()">Save Changes</a>

    <div id="footbar" class="navbar fixed-bottom">
        <div style="font-family: 'Nunito', sans-serif;" class="container">
            <a href="/messages" class="btn float-left w-25 no-outline"><i class="fa-solid fa-message nav-icons"></i></a>
            <a href="/matches" class="btn rounded-pill w-25 no-outline"><i class="fa-solid fa-user-group nav-icons"></i></a>
            <a href="/settings" class="btn float-right rounded-pill w-25 green-font button-active no-outline"><i class="fa-solid fa-gear nav-icons"></i></a>
        </div>
    </div>
</div>
{{end}}

{{block js()}}
<script>
window.onload = function() {
    var lookingFor = "{{ lookingFor }}";
    switch (lookingFor) {
        case "friends":
            document.getElementById("btn-friends").checked = true;
            break;
        case "dating":
            document.getElementById("btn-dating").checked = true;
            break;
        case "workout":
            document.getElementById("btn-workout-partner").checked = true;
            break;
        case "music":
            document.getElementById("btn-musicians").checked = true;
            break;
        case "concert":
            document.getElementById("btn-concert-goers").checked = true;
            break;
        default:
            document.getElementById("btn-friends").checked = true;
            break;
    }
}

const setUserSettings = () => {
    const data = new URLSearchParams();

    data.append("lookingFor", document.querySelector('input[name="btnradio"]:checked').value);
    data.append("distance", document.getElementById('matchRange').value);
    data.append("sensitivity", document.getElementById('matchSensitivity').value);

    fetch('/users/settings/{{ settingsID }}', {
        method: 'PUT',
        mode: 'same-origin',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: data
    }).then(res => {
        if (res.status !== 200) {
            alert('Error updating settings');
        }
        return false;
    })
}

const matchRangeChange = () => {
    const matchRange = document.getElementById("matchRange");
    const matchPercentLabel = document.getElementById("matchPercentLabel");
    matchPercentLabel.textContent = matchRange.value;
}

const matchSlide = (value) => {
    document.getElementById('sensitivityValue').innerHTML = matchSensitivitySlide(value) + " Match Sensitivity";
}

const rangeSlide = (value) => {
    document.getElementById('rangeValue').innerHTML = value + ' miles';
}

const matchSensitivitySlide = (value) => {
    console.log(value);
    switch(value) {
        case '1':
            return "Low";
        case '2':
            return "Medium";
        case '3':
            return "High";
    } 
}

</script>
{{end}}